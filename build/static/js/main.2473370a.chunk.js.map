{"version":3,"sources":["services/MessageService.js","components/ListMessageComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["message","axios","post","ListMessageComponent","props","state","messages","addMessage","bind","MessageService","getMessages","then","res","setState","data","this","history","push","className","onClick","Component","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAWe,M,sGALGA,GACV,OAAOC,IAAMC,KALM,yBAKoBF,O,MC4BhCG,E,kDA/BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAM,CACPC,SAAU,IAGd,EAAKC,WAAW,EAAKA,WAAWC,KAAhB,gBAPF,E,gEAYE,IAAD,OACfC,EAAeC,cAAcC,MAAK,SAACC,GAC/B,EAAKC,SAAS,CAAEP,SAAUM,EAAIE,Y,mCAKlCC,KAAKX,MAAMY,QAAQC,KAAK,uB,+BAKxB,OACI,8BACI,wBAAQC,UAAU,kBAAiBC,QAASJ,KAAKR,WAAjD,+B,GA3BmBa,aCqBpBC,MAlBf,WACE,OACE,8BACI,cAAC,IAAD,UACQ,qBAAKH,UAAU,YAAf,SACI,cAAC,IAAD,UAEM,cAAC,IAAD,CAAOI,KAAO,mBAAmBC,UAAapB,aCDzDqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2473370a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst message_api_base_url=\"http://localhost:9010/\";\r\n\r\nclass MessageService{\r\n\r\n    createMessage(message){\r\n        return axios.post(message_api_base_url,message);\r\n    }\r\n}\r\n\r\nexport default new MessageService()","import React, { Component } from 'react'\r\nimport MessageService from '../services/MessageService'\r\n\r\nclass ListMessageComponent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            messages: []\r\n        }\r\n\r\n        this.addMessage=this.addMessage.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        MessageService.getMessages().then((res) => {\r\n            this.setState({ messages: res.data});\r\n        });\r\n    }\r\n\r\n    addMessage(){\r\n        this.props.history.push('/add-message/_add');\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button className=\"btn btn-primary\"onClick={this.addMessage}>ADD MESSAGE</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListMessageComponent","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport ListMessageComponent from './components/ListMessageComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n                <div className=\"container\">\n                    <Switch> \n                         \n                          <Route path = \"/add-message/:id\" component = {ListMessageComponent}></Route>\n                          \n                          {/* <Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */}\n                    </Switch>\n                </div>\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}